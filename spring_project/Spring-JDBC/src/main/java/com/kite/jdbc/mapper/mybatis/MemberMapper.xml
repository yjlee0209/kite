<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kite.jdbc.mapper.mybatis.MemberMapper">

	<!-- select의 결과를 매핑하는 resultMap 설정 -->
	<resultMap id="resultMember" type="com.kite.jdbc.domain.Member" >
		<id property="id" column="id" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="name" column="name" />
		<result property="regdate" column="regdate" />
	</resultMap>

	<!-- 이메일로 검색 -->
	<select id="selectByEmail" resultMap="resultMember" >
		select * from project.member where email=#{email}
	</select>

	<!-- 아이디로 검색 -->
	<select id="selectById" resultMap="resultMember" >
		select * from project.member where id=#{id}
	</select>

	<!-- 회원 정보 리스트 -->
	<select id="selectList" resultType="com.kite.jdbc.domain.Member">
		select * from project.member order by email desc
	</select>
	
	<!-- 회원 정보 검색 -->	
	<select id="list" parameterType="map"  resultType="com.kite.jdbc.domain.Member">
		select * from project.member 
		<where>
			<if test="stype == 'both'">
				email like CONCAT('%', #{keyword} ,'%')
				or 
				name like CONCAT('%', #{keyword} ,'%')
			</if>
			<if test="stype == 'email'">
				email like CONCAT('%', #{keyword} ,'%')
			</if>
			<if test="stype == 'name'">
				name like CONCAT('%', #{keyword} ,'%')
			</if>
		</where>
		order by email desc
	</select>	
		
	<!-- 회원 정보 삽입 -->
	<insert id="insertMember" parameterType="com.kite.jdbc.domain.RequestMemberReg">
		INSERT INTO project.member (EMAIL, PASSWORD, NAME, REGDATE) VALUES(#{email}, #{password}, #{name}, now())
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.kite.jdbc.domain.Member">
		update project.member set name=#{name}, password=#{password} where id=#{id}
	</update>
	
	<!-- 회원 정보 삭제 -->
	<delete id="deleteMember">
		delete from project.member where id=#{id}
	</delete>
	
	
	
	
</mapper>